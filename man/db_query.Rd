% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/db_query.R
\name{db_query}
\alias{db_query}
\alias{dkdb_execute}
\alias{dkdb_collect}
\title{DuckDB Query}
\usage{
dkdb_execute(
  query_string,
  ...,
  .quiet = TRUE,
  .db_loc = "./htCE.duckdb",
  .db_con = NULL,
  .pg_install = FALSE,
  .pg_load = FALSE
)

dkdb_collect(
  query_string,
  ...,
  .quiet = TRUE,
  .db_loc = "./htCE.duckdb",
  .db_con = NULL,
  .pg_install = FALSE,
  .pg_load = FALSE,
  .return = NULL
)
}
\arguments{
\item{query_string}{A string - SQL query}

\item{...}{Key-value pairs - additional injected values passed to \code{\link[glue:glue_sql]{glue::glue_sql()}}}

\item{.quiet}{A Boolean - suppress console messages?}

\item{.db_loc}{A string - local path to the DuckDB file}

\item{.db_con}{A valid DBIConnection object}

\item{.pg_install}{A Boolean - install the DuckDB Postgres extension?}

\item{.pg_load}{A Boolean - use the DuckDB Postgres extension?}

\item{.return}{A string - how collected data should be returned, default is a \code{data.frame} (alias \emph{df}, see \code{\link[DBI:dbGetQuery]{DBI::dbGetQuery()}}), but can also be coerced to a \code{tibble} (alias \emph{tbl}, see \code{\link[tibble:as_tibble]{tibble::as_tibble()}}) or \code{data.table} (alias \emph{dt}, see \code{\link[data.table:as.data.table]{data.table::as.data.table()}})}
}
\value{
A \code{data.frame} (default), \code{tibble}, or \code{data.table} containing the collected query results
}
\description{
Execute or collect results from a query to a DuckDB database.
}
\details{
\code{dkdb_execute} executes a query without collecting results.

\code{dkdb_collect} collects the results from a query and returns them as a \code{tibble}.
}
